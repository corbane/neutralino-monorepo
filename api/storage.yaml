# yaml-language-server: $schema=./lib/neu-api.json
$namespace: Neutralino.storage
$description: |-
    Neutralinojs has a built-in shared key-value storage. It's like a
    global [`LocalStorage`](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage) for all Neutralinojs modes.
    `Neutralinos.storage` exposes methods for interacting with this storage feature.

    :::tip
    The storage API persists all data records into `.storage` directory in the
    root directory of your application. If you want to clear all data records,
    delete the `.storage` directory.
    :::
x-ref: |
  https://github.com/neutralinojs/neutralinojs.github.io/blob/main/docs/api/storage.md
  https://github.com/neutralinojs/neutralinojs/blob/main/api/storage/storage.cpp
  https://github.com/neutralinojs/neutralino.js/blob/main/src/api/storage.ts


setData:
  type: http:post
  params:
    $ref: '#/SetDataOptions'
  result:
    $ref: '#/SetDataResponse'
  description: |-
    Writes data into Neutralinojs shared storage. 

    ```js
    await Neutralino.storage.putData({
      bucket: 'userDetails',
      data: JSON.stringify({
        username: 'TestValue'
      })
    });
    ```

SetDataOptions:
  type: object
  properties:
    key:
      type: string
      description: A key to indentify data.
    data:
      type: string
      description: 'Data as a string. If this value is `null` or `undefined`, the specific data record will be erased from the disk.'

SetDataResponse:
  oneOf:
    - $ref: '#/SetDataSuccess'
    - $ref: '#/SetDataError'

SetDataSuccess:
  type: object
  properties:
    success:
      type: boolean
  required:
    - success

SetDataError:
  type: object
  properties:
    error:
      type: string
  required:
    - error

getData:
  type: http:post
  params:
    $ref: '#/GetDataOptions'
  result:
    $ref: '#/GetDataResult'
  description: |
    Reads and returns data for a given Neutralinojs shared storage key. 
    ```js
    let response = await Neutralino.storage.getData({
      bucket: 'userDetails'
    });
    console.log(`Data: ${response.data}`);
    ```

GetDataOptions:
  type: object
  properties:
    key:
      type: string
      description: The key of the storage data record.

GetDataResult:
  oneOf:
    - $ref: '#/GetDataSuccess'
    - $ref: '#/GetDataError'

GetDataSuccess:
  type: object
  properties:
    success:
      type: boolean
    returnValue:
      type: object
      properties:
        data:
          type: string
          description: Data string of the storage record.
  required:
    - success
    - returnValue

GetDataError:
  type: object
  properties:
    error:
      type: string
  required:
    - error
