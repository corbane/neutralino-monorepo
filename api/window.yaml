# yaml-language-server: $schema=./lib/neu-api.json
$namespace: Neutralino.window
$description: |
  `Neutralino.window` namespace contains methods related to the current native window instance.
  This namespace's methods will work only for the [window](https://neutralino.js.org/docs/configuration/modes#window) mode.

x-ref: |
  https://github.com/neutralinojs/neutralinojs.github.io/blob/main/docs/api/window.md
  https://github.com/neutralinojs/neutralinojs/blob/main/api/window/window.cpp
  https://github.com/neutralinojs/neutralino.js/blob/main/src/api/window.ts

setTitle:
  type: http:post
  params:
    $ref: '#/SetTitleParams'
  result:
    $ref: '#/SuccessResult'
  description: |
    Sets the title of the native window.

    ```js
    Neutralino.window.setTitle ('My window')
    ```

SetTitleParams:
    type: object
    properties:
      title:
        type: string
        description: Title of the window as a string.
    required:
      - title

setSize:
  type: http:post
  params:
    $ref: '#/SetSizeParams'
  result:
    $ref: '#/SuccessResult'
  description: |
    Resize the native window.

    This feature is suitable to make custom window bars along with the [borderless mode](https://neutralino.js.org/docs/configuration/neutralino.config.json#modeswindowborderless-boolean).

    This method always expects width and height couples.
    For example, if you are setting `minWidth`, you should set `minHeight` too.

    ```js
    Neutralino.window.setSize({
        width: 500,
        height: 200,
        maxWidth: 600,
        maxHeight: 400
    });
    ```

    ```js
    Neutralino.window.setSize({
        resizable: false
    });
    ```

SetSizeParams:
  type: object
  properties:
    width:
      type: number
      description: Window width in pixels.
    height:
      type: number
      description: Window height in pixels.
    minWidth:
      type: number
      description: Minimum width of the window in pixels.
    minHeight:
      type: number
      description: Minimum height of the window in pixels.
    maxWidth:
      type: number
      description: Maximum width of the window in pixels.
    maxHeight:
      type: number
      description: Maximum height of the window in pixels.
    resizable:
      type: boolean
      description: A boolean value to make the window resizable or fixed.

setIcon:
  type: http:post
  params:
    $ref: '#/SetIconParams'
  result:
    $ref: '#/SuccessResult'
  description: |-
    Sets an icon for the native window or Dock.

    ```js
    Neutralino.window.setIcon ('/resources/icons/appIcon.png');
    ````

SetIconParams:
  type: object
  properties:
    icon:
      type: string
      description: Path of the icon. A `200x200` PNG image file works fine on all supported operating systems.
  required:
    - icon

focus:
  type: http:get
  description: Focuses the native window.
  result:
    $ref: '#/SuccessResult'

hide:
  type: http:get
  description: |
    Hides the native window.
    ```js
    Neutralino.window.hide ().then (() => {
      window.setTimeout (() => Neutralino.window.show (), 1000)
    })
    ```
  result:
    $ref: '#/SuccessResult'

isVisible:
  type: http:get
  description: |
    Returns true if the native window is visible.
    ```js
    Neutralino.window.isVisible ();
    ```
  result:
    $ref: '#/IsVisibleResult'

IsVisibleResult:
  type: object
  properties:
    sucess:
      type: boolean
    returnValue:
      type: boolean
  required:
    - "sucess"
    - "returnValue"

show:
  type: http:get
  description: |
    Shows the native window.
    ```js
    Neutralino.window.hide ().then (() => {
      window.setTimeout (() => Neutralino.window.show (), 1000)
    })
    ```
  result:
    $ref: '#/SuccessResult'

minimize:
  type: http:get
  description: |
    Minimizes the native window.
    ```js
    Neutralino.window.minimize ()
    ```
  result:
    $ref: '#/SuccessResult'

maximize:
  type: http:get
  description: |
    Maximizes the native window.
    ```js
    Neutralino.window.maximize ();
    ```
  result:
    $ref: '#/SuccessResult'

isMaximized:
  type: http:get
  description: Returns true if the native window is maximized.
  result:
    $ref: '#/IsMaximizedResult'

IsMaximizedResult:
  type: object
  properties:
    "sucess":
      type: boolean
    "returnValue":
      type: boolean
  required:
    - 'sucess'
    - 'returnValue'

unmaximize:
  type: http:get
  description: Restores the native window.
  result:
    $ref: '#/SuccessResult'

setFullScreen:
  type: http:get
  description: Enables the full screen mode.
  result:
    $ref: '#/SuccessResult'

IsFullScreenResult:
  type: object
  properties:
    success:
      type: boolean
    returnValue:
      type: boolean

isFullScreen:
  type: http:get
  description: Returns true if the native window is in the full screen mode.
  result:
    $ref: '#/IsFullScreenResult'

exitFullScreen:
  type: http:get
  description: Exits from the full screen mode.
  result:
    $ref: '#/SuccessResult'

move:
  type: http:post
  params:
          $ref: '#/MoveParams'
  result:
    $ref: '#/SuccessResult'
  description: |
    Moves the native window into given coordinates.
    
    Neutralinojs's cross-platform coordinate system starts from top-left corner of the screen.
    In other words, `x=0,y=0` point refers to the top-left corner of the device's main screen.

MoveParams:
  type: object
  properties: 
    x:
      type: number
      description: A integer value for the horizontal position.
    'y':
      type: number
      description: A integer value for the vertical position.
  required:
    - x
    - 'y'

setDraggableRegion:
  type: js:method
  params:
    $ref: '#/SetDraggableRegionParams'
  description: |-
    Converts a given DOM element to a draggable region. The user will be able to drag the native window by dragging the given DOM element. This feature is suitable to make custom window bars along with the [borderless mode](../configuration/neutralino.config.json#modeswindowborderless-boolean). 

    ```js
    await Neutralino.window.setDraggableRegion('myCustomTitleBar');
    ```

SetDraggableRegionParams:
  type: object
  properties:
    domId:
      type: string
      description: A DOM element identifier as a string.
  required:
    - domId

create:
  type: js:method
  params:
    $ref: '#/WindowParams'
  description: |
    Creates a native window. You can use this method to create new window for your multi-window Neutralinojs app.
    Neutralinojs spawns a new process for each native window. Therefore, the new window works as an isolated app once the window is created. 

    However, you can build communication streams between windows with the [storage API](./storage.md).

    ```js
    Neutralino.window.create('/resources/aboutWindow.html', {
        icon: '/resources/icons/aboutIcon.png',
        enableInspector: false,
        width: 500,
        height: 300,
        maximizable: false,
        processArgs: '--window-id=W_ABOUT'
    });
    ```

WindowParams:
  type: object
  properties:
    url:
      type: string
      description: 'URL to be loaded. Eg: `/resources/aboutWindow.html`.'
    title:
      type: string
      description: Window title.
    icon:
      type: string
      description: Window icon path.
    fullScreen:
      type: string
      description: Sets full screen mode.
    alwaysOnTop:
      type: string
      description: Activates the top-most mode.
    enableInspector:
      type: string
      description: Activates developer tools and opens the web inspector window.
    borderless:
      type: string
      description: Makes the window borderless.
    maximize:
      type: string
      description: Launches the window maximized.
    hidden:
      type: string
      description: Hides the window.
    maximizable:
      type: string
      description: Makes the window maximizable or not.
    processArgs:
      type: string
      description: Additional command-line arguments for the new window process.
  required:
    - 'url'


SuccessResult:
  type: object
  properties:
    success:
      type: boolean
      const: true
      description: Always true
  required:
    - success
